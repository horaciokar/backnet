<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <style>
        .question-card {
            border: 2px solid #e9ecef;
            transition: border-color 0.3s ease;
        }
        .question-card.answered {
            border-color: #28a745;
        }
        .timer {
            position: sticky;
            top: 20px;
            z-index: 1000;
        }
        .timer.warning {
            background-color: #ffc107 !important;
            color: #212529 !important;
        }
        .timer.danger {
            background-color: #dc3545 !important;
            color: white !important;
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %>
    
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-lg-9">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h1><%= exam.title %></h1>
                    <div class="timer card bg-primary text-white" id="timer">
                        <div class="card-body py-2 px-3">
                            <i class="fas fa-clock"></i> 
                            <span id="timeRemaining"><%= timeRemaining %></span> minutos
                        </div>
                    </div>
                </div>
                
                <form id="examForm">
                    <% questions.forEach((question, index) => { %>
                        <div class="question-card card mb-4" data-question-id="<%= question.id %>">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <i class="fas fa-question-circle"></i> 
                                    Pregunta <%= index + 1 %> de <%= questions.length %>
                                </h5>
                            </div>
                            <div class="card-body">
                                <p class="lead"><%= question.question_text %></p>
                                
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="question_<%= question.id %>" id="q<%= question.id %>_a" value="A" <%= currentAnswers[question.id] === 'A' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="q<%= question.id %>_a">
                                        A) <%= question.option_a %>
                                    </label>
                                </div>
                                
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="question_<%= question.id %>" id="q<%= question.id %>_b" value="B" <%= currentAnswers[question.id] === 'B' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="q<%= question.id %>_b">
                                        B) <%= question.option_b %>
                                    </label>
                                </div>
                                
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="question_<%= question.id %>" id="q<%= question.id %>_c" value="C" <%= currentAnswers[question.id] === 'C' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="q<%= question.id %>_c">
                                        C) <%= question.option_c %>
                                    </label>
                                </div>
                                
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="question_<%= question.id %>" id="q<%= question.id %>_d" value="D" <%= currentAnswers[question.id] === 'D' ? 'checked' : '' %>>
                                    <label class="form-check-label" for="q<%= question.id %>_d">
                                        D) <%= question.option_d %>
                                    </label>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </form>
            </div>
            
            <div class="col-lg-3">
                <div class="card position-sticky" style="top: 20px;">
                    <div class="card-header">
                        <h6><i class="fas fa-list"></i> Progreso del Examen</h6>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width: 0%" id="progressBar"></div>
                            </div>
                            <small class="text-muted">
                                <span id="answeredCount">0</span> de <%= questions.length %> respondidas
                            </small>
                        </div>
                        
                        <div class="mb-3">
                            <h6>Navegación rápida:</h6>
                            <div class="row">
                                <% questions.forEach((question, index) => { %>
                                    <div class="col-3 mb-2">
                                        <button type="button" class="btn btn-outline-secondary btn-sm w-100 question-nav" data-question="<%= index + 1 %>" data-question-id="<%= question.id %>">
                                            <%= index + 1 %>
                                        </button>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-success" id="completeExam">
                                <i class="fas fa-check"></i> Completar Examen
                            </button>
                            <button type="button" class="btn btn-secondary" id="saveProgress">
                                <i class="fas fa-save"></i> Guardar Progreso
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let timeRemaining = <%= timeRemaining %>;
        let timerInterval;
        let autoSaveInterval;
        
        // Inicializar timer
        function startTimer() {
            timerInterval = setInterval(function() {
                timeRemaining--;
                const minutes = Math.floor(timeRemaining);
                const seconds = (timeRemaining % 1) * 60;
                
                document.getElementById('timeRemaining').textContent = minutes + ':' + (seconds < 10 ? '0' : '') + Math.floor(seconds);
                
                // Cambiar color del timer
                const timerElement = document.getElementById('timer');
                if (timeRemaining <= 5) {
                    timerElement.className = 'timer card bg-danger text-white';
                } else if (timeRemaining <= 10) {
                    timerElement.className = 'timer card bg-warning text-dark';
                }
                
                // Auto-completar cuando se acabe el tiempo
                if (timeRemaining <= 0) {
                    clearInterval(timerInterval);
                    clearInterval(autoSaveInterval);
                    completeExam();
                }
            }, 60000); // Actualizar cada minuto
        }
        
        // Auto-guardar progreso cada 30 segundos
        function startAutoSave() {
            autoSaveInterval = setInterval(function() {
                saveProgress();
            }, 30000);
        }
        
        // Guardar progreso
        function saveProgress() {
            const formData = new FormData(document.getElementById('examForm'));
            const answers = {};
            
            for (let [key, value] of formData.entries()) {
                const questionId = key.replace('question_', '');
                answers[questionId] = value;
            }
            
            fetch('/exams/<%= exam.id %>/attempt/<%= attempt.id %>/save-answer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(answers)
            }).catch(error => {
                console.error('Error saving progress:', error);
            });
        }
        
        // Completar examen
        function completeExam() {
            if (confirm('¿Estás seguro de que quieres completar el examen? No podrás cambiarlo después.')) {
                saveProgress();
                setTimeout(function() {
                    window.location.href = '/exams/<%= exam.id %>/complete/<%= attempt.id %>';
                }, 1000);
            }
        }
        
        // Actualizar progreso visual
        function updateProgress() {
            const totalQuestions = <%= questions.length %>;
            const answeredQuestions = document.querySelectorAll('input[type="radio"]:checked').length;
            const percentage = (answeredQuestions / totalQuestions) * 100;
            
            document.getElementById('progressBar').style.width = percentage + '%';
            document.getElementById('answeredCount').textContent = answeredQuestions;
            
            // Actualizar tarjetas de preguntas
            document.querySelectorAll('.question-card').forEach(card => {
                const questionId = card.dataset.questionId;
                const hasAnswer = card.querySelector('input[type="radio"]:checked');
                
                if (hasAnswer) {
                    card.classList.add('answered');
                } else {
                    card.classList.remove('answered');
                }
            });
            
            // Actualizar botones de navegación
            document.querySelectorAll('.question-nav').forEach(btn => {
                const questionId = btn.dataset.questionId;
                const hasAnswer = document.querySelector(`input[name="question_${questionId}"]:checked`);
                
                if (hasAnswer) {
                    btn.classList.remove('btn-outline-secondary');
                    btn.classList.add('btn-success');
                } else {
                    btn.classList.remove('btn-success');
                    btn.classList.add('btn-outline-secondary');
                }
            });
        }
        
        // Navegación rápida
        document.querySelectorAll('.question-nav').forEach(btn => {
            btn.addEventListener('click', function() {
                const questionNumber = this.dataset.question;
                const questionCard = document.querySelector(`[data-question-id="${this.dataset.questionId}"]`);
                questionCard.scrollIntoView({ behavior: 'smooth' });
            });
        });
        
        // Event listeners
        document.getElementById('examForm').addEventListener('change', function() {
            updateProgress();
            saveProgress();
        });
        
        document.getElementById('completeExam').addEventListener('click', completeExam);
        document.getElementById('saveProgress').addEventListener('click', saveProgress);
        
        // Prevenir cierre accidental
        window.addEventListener('beforeunload', function(e) {
            e.preventDefault();
            e.returnValue = '';
        });
        
        // Inicializar
        startTimer();
        startAutoSave();
        updateProgress();
    </script>
</body>
</html>
